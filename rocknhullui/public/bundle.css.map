{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/App.html",
    "../src/Sidebar.html",
    "../src/Topbar.html",
    "../src/Point.html"
  ],
  "sourcesContent": [
    "<div ref:threedeediv></div>\n<Topbar on:addPoint=\"addPoint()\" on:buildhull=\"buildhull()\"/>\n<Sidebar ref:sidebar/>\n\n<style>\n\n  ref:threedeediv {\n    position: fixed;\n    width: calc(100vw - 200px);\n    height: calc(100vh - 50px);\n    left: 0;\n    bottom: 0;\n    background-color: #AAF;\n  }\n\n</style>\n\n\n<script>\n  // import createRenderer from './createRenderer.js';\n  import rocknhull from 'rocknhull'\n  import Sidebar from './Sidebar.html'\n  import Topbar from './Topbar.html'\n\n  export default {\n    components: {\n      Sidebar,\n      Topbar\n    },\n\n    data() {\n      return {\n        rock: null,\n      }\n    },\n\n    oncreate() {\n      const threedeediv = this.refs.threedeediv\n      let rock = new rocknhull.Rocknhull(threedeediv)\n      this.set({rock: rock})\n\n\n\n    },\n\n    methods: {\n      addPoint() {\n        let rock = this.get().rock\n        let apc = rock.getAnchorPointCollection()\n        let hv = rock.getHullView()\n\n        // adding the point in the internal logic of rocknhull\n        let pointInfo = apc.add([0, 0, 0])\n        let anchorPoint = pointInfo.anchorPoint\n        // console.log(pointInfo)\n\n        // adding the UI for this point\n        const sidebar = this.refs.sidebar\n        let pointComponent = sidebar.addPoint(pointInfo.id)\n        // console.log(pointComponent)\n\n        // bind some events\n        pointComponent.on('modified', function(data){\n          hv.deleteConvexHull()\n          let changedState = data.changedState\n\n          if ('x' in changedState) {\n            anchorPoint.setX(changedState.x)\n          }else if ('y' in changedState) {\n            anchorPoint.setY(changedState.y)\n          }else if ('z' in changedState) {\n            anchorPoint.setZ(changedState.z)\n          }else {\n            let k = Object.keys(changedState)[0]\n            anchorPoint['enable' + k](changedState[k])\n          }\n          hv.updateAnchorPoints()\n        })\n\n        pointComponent.on('deleted', function(data){\n          hv.deleteConvexHull()\n          let pointId = data.pointId\n          apc.delete(pointId)\n          hv.updateAnchorPoints()\n        })\n\n        // showing a sphere\n        hv.updateAnchorPoints()\n      },\n\n\n      buildhull() {\n        let rock = this.get().rock\n        let hv = rock.getHullView()\n        hv.buildConvexHull()\n      }\n    }\n  }\n</script>\n",
    "<div ref:container class=\"container\">\n  The Sidebar\n\n  <!--\n  <Point pointId=\"1\"/>\n  <Point pointId=\"2\"/>\n  <Point pointId=\"3\"/>\n  -->\n\n</div>\n\n\n<style>\n  .container {\n    position: fixed;\n    width: 235px;\n    height: calc(100vh - 50px);\n    bottom: 0;\n    right: 0;\n    background-color: #FAA;\n    overflow-y: scroll;\n  }\n</style>\n\n\n<script>\n  import Point from './Point.html'\n\n  export default {\n    components: {\n      Point,\n    },\n\n    oncreate() {\n      //const threedeediv = this.refs.threedeediv\n\n      //console.log(this)\n    },\n\n\n    methods: {\n\n      addPoint(pointId) {\n        return new Point({\n          target: this.refs.container,\n          data: {\n            pointId: pointId\n          }\n        })\n      },\n\n    }\n  }\n</script>\n",
    "<div class=\"container\">\n  <div class=\"toolbar\">\n    <div class=\"bt\" on:click=\"fire('addPoint')\">\n      Add point\n    </div>\n\n    <div class=\"bt\" on:click=\"fire('buildhull')\">\n      Build hull\n    </div>\n  </div>\n\n</div>\n\n\n<style>\n  .container {\n    position: fixed;\n    display: inline-flex;\n    width: 100vw;\n    height: 50px;\n    top: 0;\n    background-color: #AFA;\n  }\n\n  .toolbar {\n    display: inline-flex;\n    margin: 7px;\n  }\n\n  .bt {\n    width: 150px;\n    height: 35px;\n    background: #1bca1b;\n    font-size: 20px;\n    color: #FFF;\n    line-height: 35px;\n    text-align: center;\n    cursor: pointer;\n    margin: 0 5px 0 5px;\n    user-select: none;\n  }\n</style>\n\n\n\n<script>\n\n  export default {\n\n    data() {\n      return {\n        thing: \"thing 0\"\n      };\n    },\n\n    oncreate() {\n      this.set({'thing': \"thing 1\"})\n\n    },\n\n\n    methods: {\n      /*\n      addPoint() {\n        console.log('HELLO')\n      },\n      */\n\n    }\n  }\n</script>\n",
    "<!--\n  Fires events:\n    - 'modified' with arg {pointId: String, changedState: Object}\n    - 'deleted' with arg {pointId: String}\n\n-->\n\n\n<div class=\"container\">\n  {pointId}\n  <div class=\"setting-title\">Position</div>\n  <div class=\"row-of-3\">\n    <input type=\"number\" step=\"0.1\" bind:value=x>\n    <input type=\"number\" step=\"0.1\" bind:value=y>\n    <input type=\"number\" step=\"0.1\" bind:value=z>\n  </div>\n\n  <div class=\"setting-title\">Symmetry</div>\n  <div class=\"row-of-7\">\n    <div class=\"labeled-checkbox\">|x <input type=\"checkbox\" bind:checked=MirrorX></div>\n    <div class=\"labeled-checkbox\">|y <input type=\"checkbox\" bind:checked=MirrorY></div>\n    <div class=\"labeled-checkbox\">|z <input type=\"checkbox\" bind:checked=MirrorZ></div>\n    <div class=\"labeled-checkbox\">øx <input type=\"checkbox\" bind:checked=RadialMirrorX></div>\n    <div class=\"labeled-checkbox\">øy <input type=\"checkbox\" bind:checked=RadialMirrorY></div>\n    <div class=\"labeled-checkbox\">øz <input type=\"checkbox\" bind:checked=RadialMirrorZ></div>\n    <div class=\"labeled-checkbox\">øo <input type=\"checkbox\" bind:checked=RadialMirrorO></div>\n  </div>\n\n  <div ref:deleteBt on:click=\"destroy()\">\n    Delete\n  </div>\n</div>\n\n\n<style>\n\n  input {\n    border: none;\n    text-align: center;\n  }\n\n  .container {\n    width: 100%;\n    border-bottom: dashed 3px rgba(0, 0, 0, 0.5);\n    padding: 10px 0 10px 0;\n  }\n\n  .setting-title {\n    width: 100%;\n    /*border-top: dashed 1px rgba(0, 0, 0, 0.1);*/\n    font-size: 16px;\n    padding-top: 10px;\n  }\n\n  .row-of-3 {\n    display: grid;\n    grid-template-columns: 30% 30% 30%;\n    grid-gap: 5%;\n  }\n\n  .row-of-4 {\n    display: grid;\n    grid-template-columns: 22% 22% 22% 22%;\n    grid-gap: 4%;\n  }\n\n  .row-of-7 {\n    display: grid;\n    grid-template-columns: 13% 13% 13% 13% 13% 13% 13%;\n    grid-gap: 1.5%;\n  }\n\n  .labeled-checkbox {\n    text-align: center;\n  }\n\n  ref:deleteBt{\n    width: 100%;\n    height: 35px;\n    background: #ca1b1b;\n    font-size: 20px;\n    color: #FFF;\n    line-height: 35px;\n    text-align: center;\n    cursor: pointer;\n  }\n\n</style>\n\n\n<script>\n\n  export default {\n    data() {\n      return {\n        x: 0,\n        y: 0,\n        z: 0,\n\n        // those have their first letter capitalized to match the suffix of the\n        // corresponding Rocknhull method, which are camel-cased\n        MirrorX: false,\n        MirrorY: false,\n        MirrorZ: false,\n        RadialMirrorX: false,\n        RadialMirrorY: false,\n        RadialMirrorZ: false,\n        RadialMirrorO: false,\n\n      }\n    },\n\n    onstate({ changed, current, previous }) {\n      // this fires before oncreate, and on every state change.\n      // the first time it runs, `previous` is undefined\n      if (previous === undefined) {\n        return\n      }\n\n\n      let changedState = {}\n      let stateKeys = Object.keys(previous)\n\n      for (let i=0; i<stateKeys.length; i++) {\n        let k = stateKeys[i]\n        if (previous[k] !== current[k]) {\n          changedState[k] = current[k]\n        }\n      }\n\n      let eventArg = {\n        pointId: this.get().pointId,\n        changedState: changedState\n      }\n\n      this.fire('modified', eventArg)\n    },\n\n    oncreate() {\n\n      //const threedeediv = this.refs.threedeediv\n\n    },\n\n    ondestroy() {\n      // TODO: throw an event to remove the 3D point\"\n      this.fire('deleted', {pointId: this.get().pointId})\n    }\n\n\n\n  }\n</script>\n"
  ],
  "names": [],
  "mappings": "AAME,qCAAgB,CAAC,AACf,QAAQ,CAAE,KAAK,CACf,KAAK,CAAE,KAAK,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAC1B,MAAM,CAAE,KAAK,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAC1B,IAAI,CAAE,CAAC,CACP,MAAM,CAAE,CAAC,CACT,gBAAgB,CAAE,IAAI,AACxB,CAAC;ACAD,UAAU,eAAC,CAAC,AACV,QAAQ,CAAE,KAAK,CACf,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,KAAK,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAC1B,MAAM,CAAE,CAAC,CACT,KAAK,CAAE,CAAC,CACR,gBAAgB,CAAE,IAAI,CACtB,UAAU,CAAE,MAAM,AACpB,CAAC;ACND,UAAU,cAAC,CAAC,AACV,QAAQ,CAAE,KAAK,CACf,OAAO,CAAE,WAAW,CACpB,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,IAAI,CACZ,GAAG,CAAE,CAAC,CACN,gBAAgB,CAAE,IAAI,AACxB,CAAC,AAED,QAAQ,cAAC,CAAC,AACR,OAAO,CAAE,WAAW,CACpB,MAAM,CAAE,GAAG,AACb,CAAC,AAED,GAAG,cAAC,CAAC,AACH,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,OAAO,CACnB,SAAS,CAAE,IAAI,CACf,KAAK,CAAE,IAAI,CACX,WAAW,CAAE,IAAI,CACjB,UAAU,CAAE,MAAM,CAClB,MAAM,CAAE,OAAO,CACf,MAAM,CAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CACnB,WAAW,CAAE,IAAI,AACnB,CAAC;ACJD,KAAK,cAAC,CAAC,AACL,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,MAAM,AACpB,CAAC,AAED,UAAU,cAAC,CAAC,AACV,KAAK,CAAE,IAAI,CACX,aAAa,CAAE,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAC5C,OAAO,CAAE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,AACxB,CAAC,AAED,cAAc,cAAC,CAAC,AACd,KAAK,CAAE,IAAI,CAEX,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,IAAI,AACnB,CAAC,AAED,SAAS,cAAC,CAAC,AACT,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAClC,QAAQ,CAAE,EAAE,AACd,CAAC,AAQD,SAAS,cAAC,CAAC,AACT,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAClD,QAAQ,CAAE,IAAI,AAChB,CAAC,AAED,iBAAiB,cAAC,CAAC,AACjB,UAAU,CAAE,MAAM,AACpB,CAAC,AAED,kCAAY,CAAC,AACX,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,OAAO,CACnB,SAAS,CAAE,IAAI,CACf,KAAK,CAAE,IAAI,CACX,WAAW,CAAE,IAAI,CACjB,UAAU,CAAE,MAAM,CAClB,MAAM,CAAE,OAAO,AACjB,CAAC"
}